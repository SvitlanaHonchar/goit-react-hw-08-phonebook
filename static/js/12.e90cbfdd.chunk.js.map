{"version":3,"file":"static/js/12.e90cbfdd.chunk.js","mappings":"gOAqBA,EAjBgB,SAAC,GAAiB,IAAfA,EAAc,EAAdA,QACXC,GAAWC,EAAAA,EAAAA,MAMjB,OACE,8EACWF,EAAQG,KADnB,KAC2BH,EAAQI,QACjC,mBAAQC,QAPU,WACpBJ,GAASK,EAAAA,EAAAA,IAAeN,EAAQO,IACjC,EAKmCC,KAAK,SAArC,8BAKL,E,kBCjBYC,EAAWC,EAAAA,GAAAA,GAAH,oUAuBRC,EAAWD,EAAAA,GAAAA,GAAH,kG,SCErB,EArBoB,WAClB,IAAME,GAAkBC,EAAAA,EAAAA,IAAYC,EAAAA,IACpC,OACE,0BACE,SAACH,EAAD,UAC8B,IAA3BC,EAAgBG,QACf,kDAEAH,EAAgBI,KAAI,SAAAhB,GAClB,OACE,SAACS,EAAD,WACE,SAAC,EAAD,CAAST,QAASA,KADLA,EAAQG,KAI1B,OAKV,ECvBYc,EAAcP,EAAAA,GAAAA,MAAH,0N,SCqBxB,EAlBe,WACb,IAAMT,GAAWC,EAAAA,EAAAA,MACjB,OACE,0BACE,UAACe,EAAD,CAAaC,QAAQ,GAArB,WACE,+CACA,kBACEV,KAAK,OACLW,YAAY,OACZC,SAAU,SAAAC,GACRpB,GAASqB,EAAAA,EAAAA,GAAUD,EAAME,OAAOC,OACjC,QAKV,E,kBCnBYC,EAAaf,EAAAA,GAAAA,KAAH,kPAiBVgB,EAAYhB,EAAAA,GAAAA,OAAH,sSCsEtB,EAjFkB,WAChB,OAAwBiB,EAAAA,EAAAA,UAAS,IAAjC,eAAOxB,EAAP,KAAayB,EAAb,KACA,GAA4BD,EAAAA,EAAAA,UAAS,IAArC,eAAOvB,EAAP,KAAeyB,EAAf,KACM5B,GAAWC,EAAAA,EAAAA,MACX4B,GAAWjB,EAAAA,EAAAA,IAAYkB,EAAAA,KAE7BC,EAAAA,EAAAA,YAAU,WACR/B,GAASgC,EAAAA,EAAAA,MACV,GAAE,CAAChC,IAEJ,IAAMiC,EAAc,SAAAC,GAClB,OAAQA,EAAEZ,OAAOpB,MACf,IAAK,OACHyB,EAAQO,EAAEZ,OAAOC,OACjB,MACF,IAAK,SACHK,EAAUM,EAAEZ,OAAOC,OACnB,MACF,QACEY,QAAQC,IAAI,sBAGjB,EAwBD,OACE,0BACE,UAACZ,EAAD,CAAYa,SAxBK,SAAAH,GACnBA,EAAEI,iBAEF,IAAMvC,EAAU,CACdG,KAAAA,EACAC,OAAAA,GAGc0B,EAASU,MACvB,SAAAC,GAAI,OAAIA,EAAKtC,KAAKuC,gBAAkB1C,EAAQG,KAAKuC,aAA7C,IAIJC,MAAM,+BAIR1C,GAAS2C,EAAAA,EAAAA,IAAY5C,IACrB4B,EAAQ,IACRC,EAAU,IACX,EAIG,WACE,mBAAOX,QAAQ,GAAf,WACE,oCACA,kBACEV,KAAK,OACLL,KAAK,OACL0C,QAAQ,yHACRC,MAAM,yIACN3B,YAAY,OACZK,MAAOrB,EACPiB,SAAUc,EACVa,UAAQ,QAGZ,mBAAO7B,QAAQ,GAAf,WACE,sCACA,kBACEV,KAAK,MACLL,KAAK,SACL0C,QAAQ,yFACRC,MAAM,+FACN3B,YAAY,SACZK,MAAOpB,EACPgB,SAAUc,EACVa,UAAQ,QAGZ,SAACrB,EAAD,CAAWlB,KAAK,SAAhB,6BAIP,ECtED,EAZiB,WACf,OACE,iCACE,uCACA,SAAC,EAAD,KACA,SAAC,EAAD,KACA,sCACA,SAAC,EAAD,MAGL,C","sources":["components/Contact/Contact.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/Phonebook/PhoneBook.styled.js","components/Phonebook/Phonebook.jsx","pages/Contacts.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContacts } from 'redux/contacts/operations';\n\nconst Contact = ({ contact }) => {\n  const dispatch = useDispatch();\n\n  const onRemoveClick = () => {\n    dispatch(deleteContacts(contact.id));\n  };\n\n  return (\n    <>\n      üë®üèª‚Äçü¶± {contact.name}: {contact.number}\n      <button onClick={onRemoveClick} type=\"button\">\n        Remove contact\n      </button>\n    </>\n  );\n};\n\nexport default Contact;\n\nContact.propTypes = {\n  contact: PropTypes.object,\n};\n","import styled from 'styled-components';\n\nexport const StyledLi = styled.li`\n  display: flex;\n  /* justify-content: center; */\n  align-items: center;\n\n  padding: 20px;\n\n  font-size: 20px;\n  font-weight: 500;\n\n  & button {\n    margin-left: 10px;\n\n    &:focus {\n      background-color: #c7dcff;\n    }\n\n    &:hover {\n      background-color: #c7dcff;\n    }\n  }\n`;\n\nexport const StyledOl = styled.ol`\n  margin: 0;\n\n  padding: 0;\n\n  font-size: 20px;\n  font-weight: 500;\n`;\n","import Contact from 'components/Contact/Contact';\nimport PropTypes from 'prop-types';\nimport { StyledLi, StyledOl } from './ContactList.styled';\nimport { getFilterSelector } from 'redux/selectors';\nimport { useSelector } from 'react-redux';\n\nconst ContactList = () => {\n  const visibleContacts = useSelector(getFilterSelector);\n  return (\n    <div>\n      <StyledOl>\n        {visibleContacts.length === 0 ? (\n          <i>-- no contacts here --</i>\n        ) : (\n          visibleContacts.map(contact => {\n            return (\n              <StyledLi key={contact.name}>\n                <Contact contact={contact} />\n              </StyledLi>\n            );\n          })\n        )}\n      </StyledOl>\n    </div>\n  );\n};\n\nexport default ContactList;\n\nContactList.propTypes = {\n  contacts: PropTypes.array,\n};\n","import styled from 'styled-components';\n\nexport const StyledLabel = styled.label`\n  display: flex;\n  gap: 10px;\n  flex-direction: column;\n\n  width: 200px;\n\n  padding: 20px;\n\n  border: 1px solid black;\n  border-radius: 5px;\n\n  font-size: 24px;\n  font-weight: 600;\n`;\n","import PropTypes from 'prop-types';\nimport { StyledLabel } from './Filter.styled';\nimport { setFilter } from 'redux/filterSlice';\nimport { useDispatch } from 'react-redux';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  return (\n    <div>\n      <StyledLabel htmlFor=\"\">\n        <span>Filter by name:</span>\n        <input\n          type=\"text\"\n          placeholder=\"name\"\n          onChange={event => {\n            dispatch(setFilter(event.target.value));\n          }}\n        />\n      </StyledLabel>\n    </div>\n  );\n};\n\nexport default Filter;\n\nFilter.propTypes = { onFilterContacts: PropTypes.func };\n","import styled from 'styled-components';\n\nexport const StyledForm = styled.form`\n  display: flex;\n  gap: 10px;\n  flex-direction: column;\n\n  width: 200px;\n\n  padding: 20px;\n  margin-bottom: 20px;\n\n  border: 1px solid black;\n  border-radius: 5px;\n\n  font-size: 24px;\n  font-weight: 600;\n`;\n\nexport const StyledBtn = styled.button`\n  width: 170px;\n  height: 30px;\n  padding: 0;\n  margin: 0;\n\n  border: 1px solid black;\n  border-radius: 5px;\n\n  &:focus {\n    background-color: #c7dcff;\n    border-radius: 5px;\n  }\n\n  &:hover {\n    background-color: #c7dcff;\n    border-radius: 5px;\n  }\n`;\n","import { useState } from 'react';\nimport { StyledForm, StyledBtn } from './PhoneBook.styled';\nimport { useDispatch } from 'react-redux';\nimport { getContacts } from 'redux/selectors';\nimport { useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { addContacts, fetchContacts } from 'redux/contacts/operations';\n\nconst Phonebook = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleInput = e => {\n    switch (e.target.name) {\n      case 'name':\n        setName(e.target.value);\n        break;\n      case 'number':\n        setNumber(e.target.value);\n        break;\n      default:\n        console.log('not correct option');\n        break;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const contact = {\n      name,\n      number,\n    };\n\n    const isExist = contacts.find(\n      item => item.name.toLowerCase() === contact.name.toLowerCase()\n    );\n\n    if (isExist) {\n      alert('This contact already exist');\n      return;\n    }\n\n    dispatch(addContacts(contact));\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <div>\n      <StyledForm onSubmit={handleSubmit}>\n        <label htmlFor=\"\">\n          <span>Name</span>\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Z–∞-—è–ê-–Ø]+(([' -][a-zA-Z–∞-—è–ê-–Ø ])?[a-zA-Z–∞-—è–ê-–Ø]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            placeholder=\"name\"\n            value={name}\n            onChange={handleInput}\n            required\n          />\n        </label>\n        <label htmlFor=\"\">\n          <span>Number</span>\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            placeholder=\"number\"\n            value={number}\n            onChange={handleInput}\n            required\n          />\n        </label>\n        <StyledBtn type=\"submit\">Add contact</StyledBtn>\n      </StyledForm>\n    </div>\n  );\n};\n\nexport default Phonebook;\n","import ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport Phonebook from 'components/Phonebook/Phonebook';\nimport React from 'react';\n\nconst Contacts = () => {\n  return (\n    <>\n      <h2>Phonebook</h2>\n      <Phonebook />\n      <Filter />\n      <h2>Contacts</h2>\n      <ContactList />\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["contact","dispatch","useDispatch","name","number","onClick","deleteContacts","id","type","StyledLi","styled","StyledOl","visibleContacts","useSelector","getFilterSelector","length","map","StyledLabel","htmlFor","placeholder","onChange","event","setFilter","target","value","StyledForm","StyledBtn","useState","setName","setNumber","contacts","getContacts","useEffect","fetchContacts","handleInput","e","console","log","onSubmit","preventDefault","find","item","toLowerCase","alert","addContacts","pattern","title","required"],"sourceRoot":""}