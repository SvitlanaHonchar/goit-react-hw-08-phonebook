{"version":3,"file":"static/js/12.76efab40.chunk.js","mappings":"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","sources":["components/Contact/Contact.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/Phonebook/PhoneBook.styled.js","components/Phonebook/Phonebook.jsx","pages/Contacts.jsx"],"sourcesContent":["import { Button } from '@mui/material';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContacts } from 'redux/contacts/operations';\nimport { theme } from '../../helpers/theme';\nimport { ThemeProvider } from '@mui/material/styles';\n\nconst Contact = ({ contact }) => {\n  const dispatch = useDispatch();\n\n  const onRemoveClick = () => {\n    dispatch(deleteContacts(contact.id));\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <p className=\"contact-icon\">👨🏻‍🦱</p>\n      <p>\n        <b>Name:</b> {contact.name}\n      </p>\n      <p>\n        <b>Phone:</b> {contact.number}\n      </p>\n      <Button\n        onClick={onRemoveClick}\n        type=\"button\"\n        variant=\"outlined\"\n        color=\"primary\"\n      >\n        Remove contact\n      </Button>\n    </ThemeProvider>\n  );\n};\n\nexport default Contact;\n\nContact.propTypes = {\n  contact: PropTypes.object,\n};\n","import styled from 'styled-components';\n\nexport const StyledLi = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-around;\n\n  padding: 10px;\n  gap: 10px;\n  width: 200px;\n  height: 200px;\n  border: 1.5px solid #cd4631;\n  border-radius: 8px;\n\n  background-color: #fcd9d4;\n\n  &:nth-child(even) {\n    background-color: #c1d4e0;\n    border: 1.5px solid rgb(129, 173, 200);\n  }\n\n  & p {\n    margin: 0;\n  }\n\n  & .contact-icon {\n    font-size: 30px;\n  }\n`;\n\nexport const StyledOl = styled.ol`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  gap: 20px;\n\n  margin: 0px auto 30px auto;\n\n  padding: 0;\n\n  font-size: 20px;\n  font-weight: 500;\n`;\n\nexport const StyledH2 = styled.h2`\n  text-align: center;\n`;\n","import Contact from 'components/Contact/Contact';\nimport PropTypes from 'prop-types';\nimport { StyledH2, StyledLi, StyledOl } from './ContactList.styled';\nimport { getFilterSelector } from 'redux/selectors';\nimport { useSelector } from 'react-redux';\n\nconst ContactList = () => {\n  const visibleContacts = useSelector(getFilterSelector);\n  return (\n    <div>\n      <StyledH2>- Contacts -</StyledH2>\n      <StyledOl>\n        {visibleContacts.length === 0 ? (\n          <i>-- no contacts here --</i>\n        ) : (\n          visibleContacts.map(contact => {\n            return (\n              <StyledLi key={contact.name}>\n                <Contact contact={contact} />\n              </StyledLi>\n            );\n          })\n        )}\n      </StyledOl>\n    </div>\n  );\n};\n\nexport default ContactList;\n\nContactList.propTypes = {\n  contacts: PropTypes.array,\n};\n","import styled from 'styled-components';\n\nexport const StyledLabel = styled.label`\n  display: flex;\n  gap: 10px;\n  align-items: center;\n  flex-direction: column;\n\n  width: 200px;\n\n  margin: 0px auto 30px auto;\n  padding: 20px;\n\n  /* border: 1px solid black;\n  border-radius: 5px; */\n\n  font-size: 24px;\n  font-weight: 600;\n`;\n","import PropTypes from 'prop-types';\nimport { StyledLabel } from './Filter.styled';\nimport { setFilter } from 'redux/filterSlice';\nimport { useDispatch } from 'react-redux';\nimport { TextField } from '@mui/material';\nimport { theme } from '../../helpers/theme';\nimport { ThemeProvider } from '@mui/material/styles';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  return (\n    <ThemeProvider theme={theme}>\n      <StyledLabel htmlFor=\"\">\n        <span>Filter by name:</span>\n        <TextField\n          id=\"outlined-basic\"\n          label=\"Name\"\n          variant=\"outlined\"\n          color=\"primary\"\n          type=\"text\"\n          placeholder=\"name\"\n          onChange={event => {\n            dispatch(setFilter(event.target.value));\n          }}\n        />\n      </StyledLabel>\n    </ThemeProvider>\n  );\n};\n\nexport default Filter;\n\nFilter.propTypes = { onFilterContacts: PropTypes.func };\n","import styled from 'styled-components';\n\nexport const StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  padding: 30px 0px;\n\n  align-items: center;\n  justify-content: center;\n  margin: 0px auto 30px auto;\n\n  /* padding: 5px; */\n  list-style: none;\n  max-width: 500px;\n\n  font-family: 'Roboto', 'Helvetica', 'Arial', sans-serif;\n  font-weight: 500;\n  font-size: 0.875rem;\n  line-height: 1.75;\n  letter-spacing: 0.02857em;\n\n  background-color: #f7ede8;\n  border: 1.5px solid #000000;\n  box-shadow: 6px 6px 0px rgba(129, 173, 200, 0.5);\n  border-radius: 8px;\n`;\nexport const StyledH2 = styled.h2`\n  text-align: center;\n`;\n","import { useState } from 'react';\nimport { StyledForm, StyledH2 } from './PhoneBook.styled';\nimport { useDispatch } from 'react-redux';\nimport { getContacts } from 'redux/selectors';\nimport { useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { addContacts, fetchContacts } from 'redux/contacts/operations';\nimport { Button, TextField } from '@mui/material';\nimport { theme } from '../../helpers/theme';\nimport { ThemeProvider } from '@mui/material/styles';\n\nconst Phonebook = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleInput = e => {\n    switch (e.target.name) {\n      case 'name':\n        setName(e.target.value);\n        break;\n      case 'number':\n        setNumber(e.target.value);\n        break;\n      default:\n        console.log('not correct option');\n        break;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const contact = {\n      name,\n      number,\n    };\n\n    const isExist = contacts.find(\n      item => item.name.toLowerCase() === contact.name.toLowerCase()\n    );\n\n    if (isExist) {\n      alert('This contact already exist');\n      return;\n    }\n\n    dispatch(addContacts(contact));\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <StyledH2>- Manage PhoneBook -</StyledH2>\n\n      <StyledForm onSubmit={handleSubmit}>\n        <label htmlFor=\"\">\n          <TextField\n            id=\"outlined-basic\"\n            label=\"Name\"\n            variant=\"outlined\"\n            color=\"secondary\"\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            placeholder=\"name\"\n            value={name}\n            onChange={handleInput}\n            required\n          />\n        </label>\n        <label htmlFor=\"\">\n          <TextField\n            id=\"outlined-basic\"\n            label=\"Number\"\n            variant=\"outlined\"\n            color=\"secondary\"\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            placeholder=\"number\"\n            value={number}\n            onChange={handleInput}\n            required\n          />\n        </label>\n        <Button type=\"submit\" variant=\"contained\" color=\"secondary\">\n          Add contact\n        </Button>\n      </StyledForm>\n    </ThemeProvider>\n  );\n};\n\nexport default Phonebook;\n","import ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport Phonebook from 'components/Phonebook/Phonebook';\nimport React from 'react';\n\nconst Contacts = () => {\n  return (\n    <>\n      <Phonebook />\n      <Filter />\n\n      <ContactList />\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["contact","dispatch","useDispatch","ThemeProvider","theme","className","name","number","Button","onClick","deleteContacts","id","type","variant","color","StyledLi","styled","StyledOl","StyledH2","visibleContacts","useSelector","getFilterSelector","length","map","StyledLabel","htmlFor","TextField","label","placeholder","onChange","event","setFilter","target","value","StyledForm","useState","setName","setNumber","contacts","getContacts","useEffect","fetchContacts","handleInput","e","console","log","onSubmit","preventDefault","find","item","toLowerCase","alert","addContacts","pattern","title","required"],"sourceRoot":""}